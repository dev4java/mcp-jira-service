version: '3.8'

services:
  # JIRA MCP 服务(JIRA MCP Service)
  jira-mcp-service:
    image: your-registry/jira-mcp-service:latest
    # 如果本地构建，使用以下配置：(For local build, use the following configuration:)
    # build:
    #   context: ./path-to-jira-mcp-service
    #   dockerfile: Dockerfile
    container_name: jira-mcp-service
    ports:
      - "8010:8010"
    environment:
      # JIRA 连接配置(JIRA Connection Configuration)
      - JIRA_BASE_URL=https://your-jira.company.com
      - JIRA_USERNAME=your-username
      - JIRA_PASSWORD=your-password
      
      # Spring Boot 配置(Spring Boot Configuration)
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8010
      - SERVER_SERVLET_CONTEXT_PATH=/mcp-jira
      
      # 日志配置(Logging Configuration)
      - LOGGING_LEVEL_ROOT=INFO
      - LOGGING_LEVEL_COM_EXAMPLE=DEBUG
    volumes:
      - jira-mcp-logs:/app/logs
    networks:
      - jira-mcp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8010/mcp-jira/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # 您的应用服务（使用 JIRA MCP 客户端）(Your application service using JIRA MCP client)
  your-app:
    image: your-registry/your-app:latest
    # 如果本地构建，使用以下配置：(For local build, use the following configuration:)
    # build:
    #   context: ./your-app
    #   dockerfile: Dockerfile
    container_name: your-app
    ports:
      - "8080:8080"
    environment:
      # JIRA MCP 客户端配置(JIRA MCP Client Configuration)
      - JIRA_MCP_SERVICE_URL=http://jira-mcp-service:8010/mcp-jira/api
      - JIRA_MCP_CONNECTION_TIMEOUT=10000
      - JIRA_MCP_READ_TIMEOUT=60000
      
      # 应用配置(Application Configuration)
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8080
    depends_on:
      jira-mcp-service:
        condition: service_healthy
    networks:
      - jira-mcp-network
    restart: unless-stopped

  # 前端应用（可选）(Frontend application - optional)
  frontend-app:
    image: nginx:alpine
    container_name: frontend-app
    ports:
      - "3000:80"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - your-app
      - jira-mcp-service
    networks:
      - jira-mcp-network
    restart: unless-stopped

  # Redis 缓存（可选，用于提高性能）(Redis cache - optional, for performance)
  redis:
    image: redis:7-alpine
    container_name: jira-mcp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - jira-mcp-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # 数据库（可选，如果您的应用需要）(Database - optional, if your application needs it)
  postgres:
    image: postgres:15-alpine
    container_name: your-app-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=yourapp
      - POSTGRES_USER=youruser
      - POSTGRES_PASSWORD=yourpassword
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - jira-mcp-network
    restart: unless-stopped

volumes:
  jira-mcp-logs:
    driver: local
  redis-data:
    driver: local
  postgres-data:
    driver: local

networks:
  jira-mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

---
# 开发环境配置(Development Environment Configuration)
# 文件名: docker-compose.dev.yml(File name: docker-compose.dev.yml)
# 使用方式: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up(Usage: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up)

version: '3.8'

services:
  jira-mcp-service:
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - LOGGING_LEVEL_ROOT=DEBUG
    volumes:
      - ./jira-mcp-service/src:/app/src
      - ./jira-mcp-service/target:/app/target
    
  your-app:
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DEVTOOLS_RESTART_ENABLED=true
    volumes:
      - ./your-app/src:/app/src
      - ./your-app/target:/app/target

---
# 生产环境配置(Production Environment Configuration)
# 文件名: docker-compose.prod.yml
# 使用方式: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

version: '3.8'

services:
  jira-mcp-service:
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - LOGGING_LEVEL_ROOT=WARN
      - LOGGING_LEVEL_COM_EXAMPLE=INFO
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    
  your-app:
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G

  # 负载均衡器（生产环境）
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - your-app
    networks:
      - jira-mcp-network
    deploy:
      replicas: 1 